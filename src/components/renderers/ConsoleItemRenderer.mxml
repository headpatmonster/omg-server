<?xml version="1.0"?>
<s:ItemRenderer xmlns:fx="http://ns.adobe.com/mxml/2009"
                xmlns:s="library://ns.adobe.com/flex/spark"
                styleName="ConsoleItemRenderer"
                autoDrawBackground="false"
                width="100%"
                height="100%"
                creationComplete="onCreationComplete(event)">
    
    <fx:Script>
		<![CDATA[
        import flash.globalization.DateTimeStyle;
        
        import mx.events.FlexEvent;
        import mx.utils.ObjectUtil;
        
        import spark.formatters.DateTimeFormatter;
        
        private var contentColor: uint;
        private var backgroundColor: uint;
        private var locationManager: LocationManager;
        private var dateTimeFormatter: DateTimeFormatter;
        
        
        private function onCreationComplete(event: FlexEvent): void
        {
            locationManager = LocationManager.getInstance();
            
            dateTimeFormatter = new DateTimeFormatter();
            dateTimeFormatter.dateStyle = DateTimeStyle.SHORT;
            dateTimeFormatter.timeStyle = DateTimeStyle.SHORT;
            
            alpha = 0;
            update();
        }
        
        override public function set data(value: Object): void
        {
            super.data = ObjectUtil.clone(value);
            
            if (initialized)
            {
                update();
            }
        }
        
        private function update(): void
        {
            // Defaults
            backgroundColor = 0xf9fafe;
            contentColor = 0x63718C;
            
            // Message
            txt.text = data.message;
            
            // Time
            time.text = dateTimeFormatter.format(new Date(data.time));
            
            // Type cases
            if (data.type)
            {
                // Icon
                icon.source = Service["ICON_" + data.type.toUpperCase()];
                icon.visible = true;
                icon.includeInLayout = true;
                
                // Special types
                switch (data.type)
                {
                    case "alert":
                        backgroundColor = 0xEB3764;
                        contentColor = 0xffffff;
                        break;
                    case "input":
                        backgroundColor = 0x2A2D58;
                        contentColor = 0xffffff;
                        break;
                    case "userJoined":
                        backgroundColor = 0xB4EBCA;
                        handleLocationText();
                        break;
                    case "userLeft":
                        backgroundColor = 0xD9F2B4;
                        handleLocationText();
                        break;
                    default:
                        break;
                }
            }
            else
            {
                icon.visible = false;
                icon.includeInLayout = false;
            }
            
            background.color = backgroundColor;
            
            txt.setStyle("color",
                    contentColor);
            time.setStyle("color",
                    contentColor);
            
            var colorTransForm: ColorTransform = new ColorTransform();
            colorTransForm.color = txt.getStyle("color");
            icon.transform.colorTransform = colorTransForm;
            callLater(show);
        }
        
        private function handleLocationText(): void
        {
            var loc: String = locationManager.getLocation(data.payload.ip);
            if (!loc)
                locationManager.addEventListener(Event.COMPLETE, tryAppendLocationText);
            
            tryAppendLocationText(null);
        }
        
        private function tryAppendLocationText(event: Event): void
        {
            var loc: String = locationManager.getLocation(data.payload.ip);
            if (loc)
            {
                locationManager.removeEventListener(Event.COMPLETE, tryAppendLocationText);
                
                // Append the location text
                var locObj: Object = JSON.parse(loc);
                txt.text += "; " + locObj.city + " (" + locObj.region_name + "), " + locObj.country_name;
            }
        }
        
        private function show(): void
        {
            alpha = 1;
        }
        ]]>
	</fx:Script>
    
    
    <s:Group width="100%"
             height="100%"
             top="2">
        
        <s:Rect radiusX="4"
                radiusY="4"
                width="100%"
                height="100%">
            <s:fill>
                <s:SolidColor id="background" />
            </s:fill>
        </s:Rect>
        
        <s:VGroup width="100%"
                  height="100%"
                  padding="10">
            
            <s:HGroup width="100%"
                      height="100%"
                      gap="10">
                
                <s:HGroup width="140"
                          height="100%"
                          gap="10">
                    <s:VGroup height="100%"
                              verticalAlign="middle">
                        <s:Image id="icon"
                                 scaleMode="letterbox"
                                 height="16"
                                 width="16"
                                 smooth="true" />
                    </s:VGroup>
                    
                    <s:VGroup height="100%"
                              width="100%"
                              verticalAlign="middle">
                        <s:Label id="time"
                                 width="100%"
                                 fontSize="12"
                                 fontFamily="Ubuntu" />
                    </s:VGroup>
                </s:HGroup>
                
                <s:VGroup width="100%"
                          height="100%"
                          verticalAlign="middle">
                    <s:Label id="txt"
                             width="100%"
                             fontSize="12"
                             fontFamily="Ubuntu" />
                </s:VGroup>
            
            </s:HGroup>
        
        </s:VGroup>
    
    </s:Group>

</s:ItemRenderer>